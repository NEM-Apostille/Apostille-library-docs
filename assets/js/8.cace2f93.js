(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{171:function(t,s,a){"use strict";a.r(s);var n=a(0),e=Object(n.a)({},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"content"},[t._m(0),t._v(" "),t._m(1),t._v(" "),a("p",[t._v("Apostille offers two different types of standards:")]),t._v(" "),t._m(2),t._v(" "),a("p",[t._v("If you want to notarize a digital document Public Apostille is the most straight forward way to do it, with Public Apostille you can create a "),a("a",{attrs:{href:"https://en.wikipedia.org/wiki/Timestamp",target:"_blank",rel:"noopener noreferrer"}},[t._v("timestamped"),a("OutboundLink")],1),t._v(" finger print hash of a document and send it as transaction to a public sink address providing a proof of existence that is immutable and verifiable.")]),t._v(" "),t._m(3),t._v(" "),a("p",[t._v("To start using public apostille, you would need the following items:")]),t._v(" "),t._m(4),t._v(" "),t._m(5),t._v(" "),t._m(6),t._v(" "),t._m(7),t._v(" "),t._m(8),t._m(9),t._v(" "),t._m(10),t._m(11),t._v(" "),t._m(12),t._v(" "),t._m(13),t._v(" "),t._m(14),t._v(" "),a("div",{staticClass:"warning custom-block"},[a("p",{staticClass:"custom-block-title"},[t._v("Compatibility Note")]),t._v(" "),a("p",[t._v("in "),a("a",{attrs:{href:"https://nem.io/downloads/",target:"_blank",rel:"noopener noreferrer"}},[t._v("NanoWallet"),a("OutboundLink")],1),t._v(" the SHA3 function is actually KECCAK this is why "),a("code",[t._v("apostille-library")]),t._v(" will support both KECCAK and SHA3 for backward compatibility reasons. You can read more "),a("a",{attrs:{href:"https://medium.com/@ConsenSys/are-you-really-using-sha-3-or-old-code-c5df31ad2b0",target:"_blank",rel:"noopener noreferrer"}},[t._v("here."),a("OutboundLink")],1)])]),t._v(" "),t._m(15),t._v(" "),a("p",[t._v('Public apostille uses a public address (theoretically known to the public) as a sink for announcing the transaction containing the apostille hash this is where it\'s name "public" comes from.')]),t._v(" "),t._m(16),t._v(" "),t._m(17),t._v(" "),t._m(18),t._v(" "),t._m(19)])},[function(){var t=this.$createElement,s=this._self._c||t;return s("h1",{attrs:{id:"notarizing-digital-assets"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#notarizing-digital-assets","aria-hidden":"true"}},[this._v("#")]),this._v(" Notarizing digital assets")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"introduction"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#introduction","aria-hidden":"true"}},[this._v("#")]),this._v(" Introduction")])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("Public Apostille")]),this._v(" "),s("li",[this._v("Private Apostille")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"using-public-apostille"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#using-public-apostille","aria-hidden":"true"}},[this._v("#")]),this._v(" Using Public Apostille")])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("Generator account")]),this._v(" "),s("li",[this._v("File to apostille")]),this._v(" "),s("li",[this._v("Apostille 'Sink' address")]),this._v(" "),s("li",[this._v("Endpoint url")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"tip custom-block"},[s("p",{staticClass:"custom-block-title"},[this._v("TIP")]),this._v(" "),s("p",[this._v("For the sink address and endpoint url, "),s("code",[this._v("apostille-library")]),this._v(" provides a list of defaults based on the "),s("code",[this._v("NetworkType")]),this._v(".")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"warning custom-block"},[s("p",{staticClass:"custom-block-title"},[this._v("Note")]),this._v(" "),s("p",[s("code",[this._v("MIJIN_TEST")]),this._v(" doesn't have any official sink address yet, this is why we define our own sink for this example.")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("We need to first initialize the public apostille by calling the "),s("code",[this._v("PublicApostille")]),this._v(" constructor")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-typescript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-typescript"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" NetworkType "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'nem2-sdk'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" ApostilleHttp"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" PublicApostille"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token constant"}},[t._v("KECCAK256")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" HistoricalEndpoints"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Sinks "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'apostille-library'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("// Create our own account")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" privateKey "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'aaaaaaaaaaeeeeeeeeeebbbbbbbbbb5555555555dddddddddd1111111111aaee'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" networkType "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" NetworkType"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token constant"}},[t._v("MIJIN_TEST")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" account "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" Account"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("createFromPrivateKey")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("privateKey"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" networkType"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("// Default sink address and endpoint url")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("// const sinkAddress = Address.createFromRawAddress(Sinks[networkType]);")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" sinkAddress "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" Address"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("createFromRawAddress")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'SCKPEZ-5ZAPYO-PXVF6U-YLHINF-CLYZHO-YCIO3P-KGVV'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" endpointUrl "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" HistoricalEndpoints"),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("networkType"),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("// Start a connection to the endpoint")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" apostilleHttp "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{attrs:{class:"token class-name"}},[t._v("ApostilleHttp")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("endpointUrl"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("// Initialize public apostille")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" fileName "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'top_secret.pdf'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" myPublicApostille "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{attrs:{class:"token class-name"}},[t._v("PublicApostille")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fileName"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" sinkAddress"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("At this point we have initialized our public apostille. To notarize our "),s("code",[this._v("top_secret.pdf")]),this._v(" file we need to sign the raw file data. This will be our proof that the document existed and that it has not been tampered with.")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-typescript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-typescript"}},[a("code",[a("span",{attrs:{class:"token comment"}},[t._v("// Simulate the file content")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" fileContent "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" CryptoJS"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("enc"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Utf8"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("parse")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'Public apostille is awesome !'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" hashedFileContent "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" myPublicApostille"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("update")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fileContent"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{attrs:{class:"token class-name"}},[t._v("KECCAK256")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("// Still not live yet!")]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("// Sign with my account and announce to the blockchain")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" signedApostille "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" account"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("sign")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("hashedFileContent"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\napostilleHttp"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("announce")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("signedApostille"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("then")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("reply"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{attrs:{class:"token builtin"}},[t._v("console")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("log")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("reply"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("Note that the update function accepts a "),s("code",[this._v("hashFunction")]),this._v(" argument which will be used to create an apostille hash (which is a hash of the document plus a magical byte).")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("Currently "),s("code",[this._v("apostille-library")]),this._v(" supports the following hash functions:")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ul",[a("li",[t._v("MD5")]),t._v(" "),a("li",[t._v("SHA-1")]),t._v(" "),a("li",[t._v("SHA256")]),t._v(" "),a("li",[t._v("KECCAK-256")]),t._v(" "),a("li",[t._v("KECCAK-512")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"tip custom-block"},[s("p",{staticClass:"custom-block-title"},[this._v("Note")]),this._v(" "),s("p",[this._v("Support for SHA3 should land soon in the library.")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"sink-address"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#sink-address","aria-hidden":"true"}},[this._v("#")]),this._v(" Sink Address")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("code",[this._v("apostille-library")]),this._v("  has the following default sink address for different network types and that's to be compatible with NanoWallet")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("code",[this._v("MAIN_NET")]),this._v(": NCZSJHLTIMESERVBVKOW6US64YDZG2PFGQCSV23J")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("code",[this._v("TEST_NET")]),this._v(" : TC7MCY5AGJQXZQ4BN3BOPNXUVIGDJCOHBPGUM2GE")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("code",[this._v("MIJIN_NET")]),this._v(": MCGDK2J46BODGGKMPIKCBGTBBIWL6AL5ZKLKQ56A")])}],!1,null,null,null);e.options.__file="digital-assets.md";s.default=e.exports}}]);